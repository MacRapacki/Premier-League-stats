{"version":3,"sources":["components/TeamInfo.jsx","pages/Table.jsx","images/premier-league-1.svg","components/layout/Nav.jsx","components/layout/Footer.jsx","pages/Home.jsx","pages/Scorers.jsx","pages/Teams.jsx","App.js","reportWebVitals.js","index.js"],"names":["withRouter","teamID","setTeamInfoActive","match","useState","teamData","setTeamData","console","log","getTeamData","a","url","params","id","options","type","headers","process","dataType","fetch","resp","ok","message","status","Error","json","data","useEffect","then","catch","error","className","to","src","crestUrl","alt","name","squad","length","map","person","position","uuid","Table","standings","setStandings","getStandings","competition","item","table","team","playedGames","draw","lost","won","goalsAgainst","goalsFor","points","form","Nav","exact","Logo","activeClassName","Footer","Home","Scorers","scorers","setScorers","getScorers","player","numberOfGoals","TeamInfo","React","lazy","Teams","teams","setTeams","teamInfoActive","setTeamID","getTeams","fallback","onClick","openTeamInfo","style","color","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24950cfa.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport uuid from \"react-uuid\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TeamInfo = ({ teamID, setTeamInfoActive, match }) => {\r\n  const [teamData, setTeamData] = useState([]);\r\n\r\n  console.log(match);\r\n\r\n  const getTeamData = async () => {\r\n    const url = `http://api.football-data.org/v2/teams/${match.params.id}`;\r\n    const options = {\r\n      type: \"GET\",\r\n      headers: { \"X-Auth-Token\": `${process.env.REACT_APP_API_KEY}` },\r\n      dataType: \"json\",\r\n    };\r\n\r\n    const resp = await fetch(url, options);\r\n    if (!resp.ok) {\r\n      const message = `status is: ${resp.status}`;\r\n      throw new Error(message);\r\n    }\r\n    const data = await resp.json();\r\n    return data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTeamData()\r\n      .then((data) => setTeamData(data))\r\n      .catch((error) => console.log(\"error!\"));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"team_overlay\">\r\n      <h1>{match.params.id}</h1>\r\n      <div className=\"team_info\">\r\n        <Link type=\"button\" className=\"team_info_closeBtn\" to=\"/teams\">\r\n          X\r\n        </Link>\r\n        <div className=\"team_crest\">\r\n          <img src={teamData.crestUrl} alt=\"Team Crest\" />\r\n          <p className=\"team_name\">{teamData.name}</p>\r\n        </div>\r\n        <div className=\"team_members\">\r\n          <h2>Squad:</h2>\r\n          {teamData?.squad?.length ? (\r\n            <>\r\n              {\" \"}\r\n              <div className=\"team_goalkeepers\">\r\n                <h3>Goalkeepers:</h3>\r\n                {teamData.squad?.map((person) => {\r\n                  return (\r\n                    person.position === \"Goalkeeper\" && (\r\n                      <p key={uuid()} className=\"player_name\">\r\n                        {person.name}\r\n                      </p>\r\n                    )\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"team_defenders\">\r\n                <h3>Defenders:</h3>\r\n                {teamData.squad?.map((person) => {\r\n                  return (\r\n                    person.position === \"Defender\" && (\r\n                      <p key={uuid()} className=\"player_name\">\r\n                        {person.name}\r\n                      </p>\r\n                    )\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"team_midfielders\">\r\n                <h3>Midfielders:</h3>\r\n                {teamData.squad?.map((person) => {\r\n                  return (\r\n                    person.position === \"Midfielder\" && (\r\n                      <p key={uuid()} className=\"player_name\">\r\n                        {person.name}\r\n                      </p>\r\n                    )\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"team_attackers\">\r\n                <h3>Attakers:</h3>\r\n                {teamData.squad?.map((person) => {\r\n                  return (\r\n                    person.position === \"Attacker\" && (\r\n                      <p key={uuid()} className=\"player_name\">\r\n                        {person.name}\r\n                      </p>\r\n                    )\r\n                  );\r\n                })}\r\n              </div>\r\n            </>\r\n          ) : (\r\n            \"Squads will be update at the beginning of the season :)\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(TeamInfo);\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport uuid from \"react-uuid\";\r\n\r\nconst Table = () => {\r\n  const [standings, setStandings] = useState({});\r\n\r\n  const getStandings = async () => {\r\n    const url = \"http://api.football-data.org//v2/competitions/2021/standings\";\r\n    const options = {\r\n      type: \"GET\",\r\n      headers: { \"X-Auth-Token\": `${process.env.REACT_APP_API_KEY}` },\r\n      dataType: \"json\",\r\n    };\r\n    const resp = await fetch(url, options);\r\n    if (!resp.ok) {\r\n      const message = `status is: ${resp.status}`;\r\n      throw new Error(message);\r\n    }\r\n    const data = await resp.json();\r\n    return data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStandings()\r\n      .then((data) => setStandings(data))\r\n      .catch((error) => console.log(`error: ${error}`));\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"container\">\r\n        <h2> {` ${standings.competition?.name} table:`}</h2>\r\n        {standings.standings?.map((item) => {\r\n          return (\r\n            item.type === \"TOTAL\" && (\r\n              <div key={uuid()} className=\"table\">\r\n                <div className=\"team\">\r\n                  <div className=\"position\"> #</div>\r\n                  <div className=\"team_name\"> Name</div>\r\n                  <div className=\"played_games\"> Apl</div>\r\n                  <div className=\"won_games active\"> W</div>\r\n                  <div className=\"draw_games active\">D</div>\r\n                  <div className=\"lost_games active\"> L</div>\r\n                  <div className=\"goals\">G</div>\r\n                  <div className=\"points\"> Pts</div>\r\n                  <div className=\"form active\"> F</div>\r\n                </div>\r\n                {item.type === \"TOTAL\" &&\r\n                  item.table?.map((teamData) => {\r\n                    const {\r\n                      position,\r\n                      team,\r\n                      playedGames,\r\n                      draw,\r\n                      lost,\r\n                      won,\r\n                      goalsAgainst,\r\n                      goalsFor,\r\n                      points,\r\n                      form,\r\n                    } = teamData;\r\n                    return (\r\n                      <div className=\"team\" key={uuid()}>\r\n                        <div className=\"position\"> {position}</div>\r\n                        <div className=\"team_name\"> {team.name}</div>\r\n                        <div className=\"played_games\"> {playedGames}</div>\r\n                        <div className=\"won_games active\"> {won}</div>\r\n                        <div className=\"draw_games active\"> {draw}</div>\r\n                        <div className=\"lost_games active\"> {lost}</div>\r\n                        <div className=\"goals\">\r\n                          {`${goalsFor}:${goalsAgainst}`}\r\n                        </div>\r\n                        <div className=\"points\"> {points}</div>\r\n                        <div className=\"form active\"> {form}</div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            )\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","export default __webpack_public_path__ + \"static/media/premier-league-1.dbb39543.svg\";","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nimport Logo from \"../../images/premier-league-1.svg\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <nav className=\"navigation\">\r\n      <div className=\"nav_wrapper\">\r\n        <Link to=\"/Premier-League-stats/\" exact className=\"nav_logo\">\r\n          <img src={Logo} alt=\"premier league logo\" />\r\n        </Link>\r\n        <ul className=\"nav_list\">\r\n          <NavLink\r\n            className=\"nav_item\"\r\n            activeClassName=\"selected\"\r\n            to=\"/Premier-League-stats/\"\r\n            exact\r\n          >\r\n            Home\r\n          </NavLink>\r\n          <NavLink className=\"nav_item\" activeClassName=\"selected\" to=\"/table\">\r\n            Table\r\n          </NavLink>\r\n          <NavLink\r\n            className=\"nav_item\"\r\n            activeClassName=\"selected\"\r\n            to=\"/scorers\"\r\n          >\r\n            Scorers\r\n          </NavLink>\r\n          <NavLink className=\"nav_item\" activeClassName=\"selected\" to=\"/teams\">\r\n            Teams\r\n          </NavLink>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer_text\">Created by MacRapacki</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <header>\r\n        <h1 className=\"header_title\">Premier League </h1>\r\n        <p className=\"header_info\">\r\n          This website is for Premier League 21/22 fans. Here You can check\r\n          Teams and Players basis statistics. Enjoy!{\" \"}\r\n        </p>\r\n      </header>\r\n      <section className=\"home\"></section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport uuid from \"react-uuid\";\r\n\r\nconst Scorers = () => {\r\n  const [scorers, setScorers] = useState([]);\r\n\r\n  const getScorers = async () => {\r\n    const url = \"http://api.football-data.org//v2/competitions/2021/scorers\";\r\n    const options = {\r\n      type: \"GET\",\r\n      headers: { \"X-Auth-Token\": `${process.env.REACT_APP_API_KEY}` },\r\n      dataType: \"json\",\r\n    };\r\n    const resp = await fetch(url, options);\r\n    if (!resp.ok) {\r\n      const message = `status is: ${resp.status}`;\r\n      throw new Error(message);\r\n    }\r\n    const data = await resp.json();\r\n    return data;\r\n  };\r\n  useEffect(() => {\r\n    console.log(process.env.REACT_APP_API_KEY);\r\n    getScorers()\r\n      .then((data) => setScorers(data))\r\n      .catch((error) => console.log(\"error\"));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <section className=\"scorers\">\r\n        <h2>Best 10 Premier League goal scorers:</h2>\r\n        <div className=\"scorers_wrapper\">\r\n          <div className=\"player\">\r\n            <div className=\"player_goals\">Goals</div>\r\n            <div className=\"player_name\">Name</div>\r\n            <div className=\"player_team\">Team</div>\r\n          </div>\r\n          {scorers.scorers?.map((person) => {\r\n            const { player } = person;\r\n            return (\r\n              <div className=\"player\" key={uuid()}>\r\n                <div className=\"player_goals\">{person.numberOfGoals}</div>\r\n                <div className=\"player_name\">{player.name}</div>\r\n                <div className=\"player_team\">{person.team.name}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scorers;\r\n","import React, { useEffect, useState, Suspense } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport uuid from \"react-uuid\";\r\n// import TeamInfo from \"../components/TeamInfo\";\r\n\r\nconst TeamInfo = React.lazy(() => import(\"../components/TeamInfo\"));\r\n\r\nconst Teams = () => {\r\n  const [teams, setTeams] = useState([]);\r\n  const [teamInfoActive, setTeamInfoActive] = useState(false);\r\n  const [teamID, setTeamID] = useState(1);\r\n\r\n  const getTeams = async () => {\r\n    const url = \"http://api.football-data.org/v2/competitions/2021/teams\";\r\n    const options = {\r\n      type: \"GET\",\r\n      headers: { \"X-Auth-Token\": `${process.env.REACT_APP_API_KEY}` },\r\n      dataType: \"json\",\r\n    };\r\n    const resp = await fetch(url, options);\r\n    if (!resp.ok) {\r\n      const message = `status is: ${resp.status}`;\r\n      throw new Error(message);\r\n    }\r\n    const data = await resp.json();\r\n    return data;\r\n  };\r\n\r\n  const openTeamInfo = (id) => {\r\n    setTeamInfoActive(true);\r\n    setTeamID(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTeams()\r\n      .then((data) => setTeams(data))\r\n      .catch((error) => console.log(\"error!\"));\r\n  }, []);\r\n\r\n  console.log(teams);\r\n  return (\r\n    <>\r\n      <section className=\"teams\">\r\n        {teamInfoActive ? (\r\n          <Suspense fallback={<div>loading...</div>}>\r\n            <TeamInfo setTeamInfoActive={setTeamInfoActive} teamID={teamID} />\r\n          </Suspense>\r\n        ) : (\r\n          <>\r\n            {teams?.teams?.map((team) => {\r\n              const { crestUrl, id, name } = team;\r\n              return (\r\n                <div className=\"teams_team\" key={uuid()}>\r\n                  <div className=\"team_img\">\r\n                    <img src={crestUrl} alt=\"team logo\" />\r\n                  </div>\r\n                  <p className=\"team_name\">{name}</p>\r\n                  <div className=\"team_info_overlay\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"team_button\"\r\n                      onClick={() => openTeamInfo(id)}\r\n                    >\r\n                      Find out more\r\n                    </button>\r\n                    <Link to={`/teams/${id}`} style={{ color: \"red\" }}>\r\n                      testtst\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Teams;\r\n","import \"./App.scss\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Table from \"./pages/Table\";\r\nimport Nav from \"./components/layout/Nav\";\r\nimport Footer from \"./components/layout/Footer\";\r\nimport Home from \"./pages/Home\";\r\nimport Scorers from \"./pages/Scorers\";\r\nimport Teams from \"./pages/Teams\";\r\nimport TeamInfo from \"./components/TeamInfo\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Nav />\r\n      <Switch>\r\n        <Route path=\"/Premier-League-stats/\" component={Home} exact />\r\n        <Route path=\"/table\" component={Table} />\r\n        <Route path=\"/scorers\" component={Scorers} />\r\n        <Route exact path=\"/teams\" component={Teams} />\r\n        <Route path=\"/teams/:id\" component={TeamInfo} />\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}